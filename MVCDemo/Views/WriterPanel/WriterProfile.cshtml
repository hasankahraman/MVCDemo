@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<h2>WriterProfile</h2>

@using (Html.BeginForm("WriterProfile", "WriterPanel", FormMethod.Post))
{
    <div class="form-group">

        @Html.Label("Name")
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Name)

        @Html.Label("Surname")
        @Html.TextBoxFor(x => x.Surname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Surname)

        @Html.Label("E-Mail")
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Email)

        @Html.Label("Password")
        @Html.TextBoxFor(x => x.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Password)

        @Html.Label("Image")
        @Html.TextBoxFor(x => x.Image, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Image)

        @Html.Label("Title")
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Title)

        @Html.Label("About")
        @Html.TextBoxFor(x => x.About, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.About)

        <br />

        <button class="btn btn-dark">Update</button>
    </div>
}